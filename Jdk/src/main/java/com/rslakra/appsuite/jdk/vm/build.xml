<?xml version="1.0"?>
<!--  Created By: Rohtash Singh (rohtash.singh@gmail.com) -->
<project name="AppSuite" default="all" basedir="">

    <property name="ProjectName" value="MemoryTest"/>
    <property file="build.properties"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <!--property name="jar.file" value="${ant.project.name}.jar"/-->
    <property name="jar.file" value="${ProjectName}.jar"/>

    <!-- class path -->
    <path id="third.party.jars">
        <fileset dir="${basedir}/lib" includes="**/*.jar"/>
    </path>

    <target name="all" depends="build"/>

    <!-- Clean"'s purpose is to delete the contents of the build directory -->
    <target name="clean" description="Cleans the build dir's">
        <delete dir="${build.dir}" quiet="true"/>
        <delete dir="${deploy.dir}" quiet="true"/>
        <!-- Delete jar file >
        <delete file="${basedir}/${jar.file}" quiet="true"/-->
    </target>

    <!-- Creates JAR file -->
    <target name="deploy" depends="build">
        <copy todir="${deploy.dir}">
            <fileset dir="${basedir}/lib" includes="**/*"/>
            <fileset dir="/com/rslakra/java/vm/" includes="run*"/>
        </copy>

        <pathconvert property="local.install.class.path.j2se.windows" targetos="windows" refid="third.party.jars">
            <map from="${third.party.jars}" to="."/>
        </pathconvert>

        <pathconvert property="local.install.class.path.siege.unix" targetos="unix" refid="third.party.jars">
            <map from="${third.party.jars}" to="."/>
        </pathconvert>

        <pathconvert property="local.install.class.path.siege.windows" targetos="windows" refid="third.party.jars">
            <map from="${third.party.jars}" to="."/>
        </pathconvert>

        <!--echo file="${deploy.dir}/runReserveMemory.sh">siege -width720 -height576 -classpath ${local.install.class.path.siege.unix}:${deploy.dir}/${jar.file} MemoryManager $*</echo>
        <echo file="${deploy.dir}/runReserveMemory.bat">siege -Xms64m -Xmx96m -width720 -height576 -classpath ${local.install.class.path.siege.windows};${deploy.dir}/${jar.file} MemoryManager %*</echo-->

        <!--
        <echo file="${deploy.dir}/reserveMemory.bat">siege -Xms64m -Xmx96m -Dreserve.memory=20 -classpath ${third.party.jars};${basedir}/${jar.file} MemoryManager </echo>
        <echo file="${deploy.dir}/reserveMemory.sh">siege -Xms64m -Xmx96m -Dreserve.memory=20 -classpath ${third.party.jars};${basedir}/${jar.file} MemoryManager</echo>
        -->
    </target>

    <!-- Creates JAR file -->
    <target name="build" depends="compile">
        <!-- Create jar file and place in base directory,
            which includes data*.*, *.xml, *.class and library files -->
        <jar destfile="${deploy.dir}/${jar.file}">
            <!-- fileset dir="${basedir}/" includes="data*.*, *.htm, *.dat, *.txt" excludes="build.properties, build.xml"/>
            <fileset dir="${classes.dir}" includes="**/*.class" /-->
            <fileset dir="${classes.dir}" includes="**/*.*"/>

            <manifest>
                <attribute name="Built-By" value="Rohtash Singh"/>
                <attribute name="Main-Class" value="MemoryManager"/>
                <attribute name="Implementation-Vendor" value="rohtash.lakra@devamatre.com"/>
                <attribute name="Implementation-Title" value="Memory Standalone Application"/>
            </manifest>
        </jar>

        <!-- Sign jar file syntax:
        jarsigner -keystore <keystorefilename> -storepass <store-password> -keypass <key-password> -signedjar <signed-jarfile.jar> <unsigned.jarfile> openacircle
        jarsigner -keystore .keystore_openacircle_2009 -storepass 3nc0d3rk3y -keypass 0p3n2c1rcl3 -signedjar xxx.jar yyy.jar openacircle
        <signjar keystore="${basedir}/openacircle_2009.keystore" storepass="3nc0d3rk3y" keypass="0p3n2c1rcl3" signedjar="${basedir}/S${jar.file}" jar="${basedir}/${jar.file}" alias="openacircle"/>
        -->
        <!--signjar keystore="${basedir}/openacircle_2009.keystore" storepass="3nc0d3rk3y" keypass="0p3n2c1rcl3" signedjar="${basedir}/S${jar.file}" jar="${basedir}/${jar.file}" alias="openacircle"/>
        <delete file="${basedir}/${jar.file}" quiet="true" />
        <move file="${basedir}/S${jar.file}" tofile="${basedir}/${jar.file}"/-->

    </target>

    <target name="compile" depends="init" description="Compiling .java files">
        <echo>Compiling '${src.dir}' into '${classes.dir}'</echo>
        <javac
                fork="${javac.fork}"
                srcdir="${src.dir}"
                destdir="${classes.dir}"
                bootclasspath="${basedir}/jvm.jar"
                source="${javac.source}"
                target="${javac.target}"
                optimize="${javac.optimize}"
                debug="${javac.debug}"
                debuglevel="${javac.debug.level}"
                listfiles="true"
                failonerror="true"
                classpathref="third.party.jars"/>
    </target>

    <target name="init" description="Makes the base dir structure">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${classes.dir}"/>
        <!-- Create local install directories -->
        <mkdir dir="${deploy.dir}"/>
    </target>

</project>
